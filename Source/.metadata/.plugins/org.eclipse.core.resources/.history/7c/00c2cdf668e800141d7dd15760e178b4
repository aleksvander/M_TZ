package ru.adnovotelnov.ejb.dao;

import java.util.List;

import javax.ejb.Local;
import javax.ejb.LocalBean;
import javax.ejb.Stateless;
import javax.persistence.TypedQuery;

import model_JPA.Task;
import model_JPA.User;

/**
 * Session Bean implementation class TaskDaoEJB
 */
@Stateless(name = "taskDaoEJB", mappedName = "ejb/taskDaoEJB")
@Local
public class TaskDaoEJB extends JPADaoEJB<Task> {

	@Override
	public List<Task> findAllEntities() {
		return em.createNamedQuery("Task.findAll").getResultList();
	}

	public List<Task> findAllTaskByIdUser(Integer userId) {
		StringBuilder sb = new StringBuilder("SELECT t FROM Task t JOIN FETCH t.user u WHERE (t.user = " + userId + ")");
		return em.createQuery(sb.toString()).getResultList();
	}
	
	public List<Task> findByNameAndUserId(String custName, int userId) {
		StringBuilder sb = new StringBuilder("SELECT t FROM Task t JOIN FETCH t.user u WHERE (t.name LIKE " + custName + ")"); //" + userId + " // t.id_user = u.id - ? работает без нее? //" AND t.user" + userId + 
		List<Task> lt = em.createQuery(sb.toString()).getResultList();
		System.out.println("xz" + lt);
		return lt;
	}

	public List<Task> findByName(String custName) {
		return em.createNamedQuery("Task.findByName").setParameter("custName", custName).getResultList();
	}
	
	public List<Task> findByAllTaskCurentUser(int userId) {
		StringBuilder sb = new StringBuilder("SELECT t FROM Task t JOIN FETCH t.user u WHERE t.user = " + userId);
		return em.createQuery(sb.toString()).getResultList();
	}
}
