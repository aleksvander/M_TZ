package ru.adnovotelnov.ejb;

import java.util.List;

import javax.ejb.Local;
import javax.ws.rs.ApplicationPath;
import javax.ws.rs.CookieParam;
import javax.ws.rs.DefaultValue;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import model_JPA.User;

/**
 * Локальный интерфейс для доступа к ejb компоненту
 * С аннотациями для доступа через RESTEasy
 * @author Новотельнов А.Д.
 * @version 1.0
 */
@Local
@Path("users")
public interface UserEJBLocal {
	
	/**
	 * Получить всех пользователей
	 * @return List<String> - JSON формата
	 */
	@GET
	@Path("getAllusers")
	@Produces(MediaType.APPLICATION_JSON)
	public List<String> getAllUsers();
	
	/**
	 * Получить всех пользователей по имени
	 * @param name
	 * @return List<User>
	 */
	public List<User> getuser(@PathParam("name") String name);
	
	/**
	 * Получить(найти) или создать и получить пользователя по имени - имя пользователя уникальное!
	 * @param userName
	 * @return
	 */
	@GET
	@Path("getOrCreateUser")
	@Produces(MediaType.APPLICATION_JSON)
	public String getOrCreateUser(@CookieParam("username") @DefaultValue("") String userName);
	
	@GET
	@Path("checkExistName")
	@Produces(MediaType.APPLICATION_JSON)
	public boolean checkExistName(@CookieParam("username") @DefaultValue("") String userName);
	
	public int getUserIdByName(String name);
	
	@GET
	@Path("findById/{id}")
	@Produces(MediaType.APPLICATION_JSON)
	public User findById(@PathParam("id") int id);
}
